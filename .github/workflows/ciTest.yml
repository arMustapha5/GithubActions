name: Selenium Tests CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set Up Chrome and ChromeDriver
        uses: nanasess/setup-chromedriver@v2
        with:
          chrome-version: 'stable'


      - name: Run Tests with Maven
        run: mvn test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: target/surefire-reports/
      - name: Send Email Notification
        if: always()  # Run this step regardless of test result (success or failure)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ SECRETS.MAIL_PORT }}
          username: ${{ SECRETS.MAIL_USERNAME }}
          password: ${{ SECRETS.MAIL_PASSWORD }}
          subject: "Selenium Test Results - ${{ github.workflow }} (Run #${{ github.run_number }})"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: "GitHub Actions <${{ SECRETS.MAIL_USERNAME }}>"
          body: |
            **Repository**: ${{ github.repository }}
            **Branch**: ${{ github.ref }}
            **Commit**: ${{ github.sha }}
            **Status**: ${{ job.status }}

            Check full logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Slack Notification (Linux/macOS)
        if: always() && runner.os != 'Windows'
        run: |
          STATUS="${{ job.status }}"
          if [ "$STATUS" == "success" ]; then
            message="✅ *Tests Passed!* ✅"
          else
            message="❌ *Tests Failed!* ❌"
          fi
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$message\nRepo: $GITHUB_REPOSITORY\nCommit: $GITHUB_SHA\nTrigger: $GITHUB_EVENT_NAME\nCheck logs: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
        shell: bash

      - name: Send Slack Notification (Windows)
        if: always() && runner.os == 'Windows'
        run: |
          $STATUS = "${{ job.status }}"
          if ($STATUS -eq "success") {
            $message = "✅ *Tests Passed!* ✅"
          } else {
            $message = "❌ *Tests Failed!* ❌"
          }
          $payload = @{
            text = "$message`nRepo: $env:GITHUB_REPOSITORY`nCommit: $env:GITHUB_SHA`nTrigger: $env:GITHUB_EVENT_NAME`nCheck logs: $env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY/actions/runs/$env:GITHUB_RUN_ID"
          } | ConvertTo-Json -Compress
          
          Invoke-RestMethod -Uri "${{ secrets.SLACK_WEBHOOK_URL }}" -Method Post -ContentType "application/json" -Body $payload
        shell: pwsh